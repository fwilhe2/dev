# SPDX-FileCopyrightText: Florian Wilhelm
# SPDX-License-Identifier: Apache-2.0

# Based on the examples by Akihiro Suda and the lima contributors, see https://github.com/lima-vm/lima, distributed under Apache-2.0 license

# limactl create --name dev dev.yaml
# limactl start dev
# less +F ${LIMA_HOME:-$HOME/.lima}/.lima/dev/serial*.log
# echo "Include ${LIMA_HOME:-$HOME/.lima}/dev/ssh.config" >> ~/.ssh/config
# limactl shell dev

# Connect to vs code ssh remote plugin via name 'lima-dev'

vmType: qemu
os: Linux
memory: 8GiB
ssh:
  loadDotSSHPubKeys: true
containerd:
  system: false
  user: false

images:
- location: "https://cloud.debian.org/images/cloud/trixie/daily/latest/debian-13-genericcloud-amd64-daily.qcow2"
  arch: "x86_64"
- location: "https://cloud.debian.org/images/cloud/trixie/daily/latest/debian-13-genericcloud-arm64-daily.qcow2"
  arch: "aarch64"

mounts:
- location: "~"
- location: "/tmp/lima"
  writable: true

provision:
- mode: system
  script: |
    #!/bin/bash
    set -eux -o pipefail
    export DEBIAN_FRONTEND=noninteractive
    apt-get update
    apt-get -y install ansible curl bash unzip

- mode: user
  script: |
    #!/bin/bash
    set -eux -o pipefail
    tmp_dir=$(mktemp -d -t sysauto-XXXXXXXXXX)
    curl --location https://github.com/fwilhe2/system-automation/archive/main.zip -o ${tmp_dir}/sysauto.zip
    unzip ${tmp_dir}/sysauto.zip -d ${tmp_dir}/extract
    ansible-galaxy install -r ${tmp_dir}/extract/system-automation-main/requirements.yml
    ansible-playbook --skip-tags=virtualization --inventory ${tmp_dir}/extract/system-automation-main/inventory ${tmp_dir}/extract/system-automation-main/common.yml
